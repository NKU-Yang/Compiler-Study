--- main.s	2020-10-15 10:38:24.257597693 -0700
+++ test1.s	2020-10-16 01:08:44.966368683 -0700
@@ -1,34 +1,58 @@
-.section  .rodata
+	.file	"test1.c"
+	.text
+	.section	.rodata
 .LC0:
       .string "%d"
 .LC1:
       .string "%d\n"
-#main function
-.text
-.globl main
-.type  main, @function
+	.text
+	.globl	main
+	.type	main, @function
 main:
-.LFB23:
-      #Allocate 24 bytes on stack
-      subq  $24, %rsp
-      #set %eax 0
-      movl  $0,%eax
-      leaq  4(%rsp),%rsi
-      #Allocate the address of LC0 to rdi
-      leaq  .LC0(%rip),%rdi
+.LFB0:
+	.cfi_startproc
+	pushq	%rbp
+	.cfi_def_cfa_offset 16
+	.cfi_offset 6, -16
+	movq	%rsp, %rbp
+	.cfi_def_cfa_register 6
+	subq	$32, %rsp
+	movq	%fs:40, %rax
+	movq	%rax, -8(%rbp)
+	xorl	%eax, %eax
+	leaq	-20(%rbp), %rax
+	movq	%rax, %rsi
+	leaq	.LC0(%rip), %rdi
+	movl	$0, %eax
       call  __isoc99_scanf@PLT
-      movl $1,%edx
-      movl $2,%ecx
+	movl	$2, -16(%rbp)
+	movl	$1, -12(%rbp)
       jmp .L2
 .L3:
-      imull %ecx,%edx
-      addl  $1, %ecx
+	movl	-12(%rbp), %eax
+	imull	-16(%rbp), %eax
+	movl	%eax, -12(%rbp)
+	addl	$1, -16(%rbp)
 .L2:
-      cmpl %ecx, 4(%rsp)
-      jge  .L3
-      leaq .LC1(%rip),%rsi
-      call __printf_chk@PLT
-      addq $24, %rsp
+	movl	-20(%rbp), %eax
+	cmpl	%eax, -16(%rbp)
+	jle	.L3
+	movl	-12(%rbp), %eax
+	movl	%eax, %esi
+	leaq	.LC1(%rip), %rdi
+	movl	$0, %eax
+	call	printf@PLT
+	movl	$0, %eax
+	movq	-8(%rbp), %rdx
+	xorq	%fs:40, %rdx
+	je	.L5
+	call	__stack_chk_fail@PLT
+.L5:
+	leave
+	.cfi_def_cfa 7, 8
       ret
-.section        .note.GNU-stack,"",@progbits
-      
+	.cfi_endproc
+.LFE0:
+	.size	main, .-main
+	.ident	"GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0"
+	.section	.note.GNU-stack,"",@progbits
